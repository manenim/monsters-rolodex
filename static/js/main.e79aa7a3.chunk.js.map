{"version":3,"sources":["logo.svg","components/card/Card.component.jsx","components/card-list/Card-list.component.jsx","components/search-box/Search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","handlechange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCaAA,EAVF,SAACC,GACV,OACI,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAG,+BAA4BF,EAAMG,QAAQC,GAA1C,0BAAsEC,IAAM,YACpF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCIfC,G,MARE,SAACR,GACd,OACI,qBAAKC,UAAY,YAAjB,SACGD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAI,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,WCQ/CO,G,MAZG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC7B,OACI,uBACAZ,UAAU,SACVa,KAAO,SACPF,YAAeA,EACfG,SAAYF,MCoCLG,EAvCf,kDACE,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAeRiB,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALE,EADrB,sDAUE,WAAsB,IAAD,OACnBI,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,SAb5C,oBAqBE,WACE,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZU,EAAmBrB,EAASsB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACAW,YAAc,kBACdC,aAAgBgB,KAAKZ,eAErB,cAAC,EAAD,CAAUR,SAAYqB,WAjC9B,GAAyBI,aCMVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e79aa7a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './card.styles.css'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className = \"card-container\">\r\n            <img src = {`https://robohash.org/${props.monster.id}}?set=set4/?size=20x20`} alt = 'monster' />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from '../card/Card.component'\r\nimport './card-list.style.css'\r\n\r\nconst CardList = (props) => {\r\n    return (\r\n        <div className = \"card-list\">\r\n          {props.monsters.map(monster => <Card key = {monster.id} monster = {monster} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nconst SearchBox = ({placeholder, handleChange}) => {\r\n    return (\r\n        <input\r\n        className=\"search\"\r\n        type = \"search\" \r\n        placeholder = {placeholder} \r\n        onChange = {handleChange}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, { Component } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport CardList from './components/card-list/Card-list.component';\nimport SearchBox from './components/search-box/Search-box.component';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      monsters: [],\n      searchField: '',\n     \n    }\n  }\n  componentWillMount() {\n    fetch(\"http://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n\n  }\n\n  handlechange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n  \n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n        <h1>Monsters Roledex</h1>\n        <SearchBox \n        placeholder = \"search monsters\"\n        handleChange = {this.handlechange}\n        />\n        <CardList monsters = {filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}